// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider = "mysql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.text annotations in model Account below
    // Further reading: 
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    
    url      = env("DATABASE_URL")
    
    referentialIntegrity = "prisma"
}

model Example {
    id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Fixture{
    id          String @id @default(cuid())
    home        Club @relation(name:"home",fields:[homeId],references:[id])
    homeId      String
    away        Club @relation(name:"away",fields:[awayId],references:[id])
    awayId      String
    date        DateTime
    competition Competition @relation(fields:[competitionId],references:[id])
    competitionId String
    score       String? //score model
}

model Club{
    id String @id @default(cuid())
    name String @unique
    logo String?
    stadium String? //Stadium model
    website String?
    socials String? //Socials model
    squad String? //Squad model

    homeFixtures Fixture[] @relation(name:"home")
    awayFixtures Fixture[] @relation(name:"away")

    competitions Competition[]
}

model Competition{
    id String @id @default(cuid())
    name String
    logo String?
    country String //Country model
    year Int //probably

    clubs Club[]
    fixtures Fixture[]
}

